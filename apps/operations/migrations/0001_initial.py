# Generated by Django 2.2 on 2022-12-28 21:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        ('courses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAsk',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.BaseModel')),
                ('name', models.CharField(max_length=20, verbose_name='name')),
                ('mobile', models.CharField(max_length=11, verbose_name='phone number')),
                ('course_name', models.CharField(max_length=50, verbose_name='course title')),
            ],
            options={
                'verbose_name': 'user request',
                'verbose_name_plural': 'user request',
            },
            bases=('users.basemodel',),
        ),
        migrations.CreateModel(
            name='UserMessage',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.BaseModel')),
                ('user', models.IntegerField(default=0, verbose_name='user')),
                ('message', models.CharField(max_length=500, verbose_name='content')),
                ('has_read', models.BooleanField(default=False, verbose_name='if read')),
            ],
            options={
                'verbose_name': 'user information',
                'verbose_name_plural': 'user information',
            },
            bases=('users.basemodel',),
        ),
        migrations.CreateModel(
            name='UserFavorite',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.BaseModel')),
                ('fav_id', models.IntegerField(default=0, verbose_name='id')),
                ('fav_type', models.IntegerField(choices=[(1, 'course name'), (2, 'course organization'), (3, 'lecturer')], default=1, verbose_name='favorite type')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'favorite',
                'verbose_name_plural': 'favorite',
            },
            bases=('users.basemodel',),
        ),
        migrations.CreateModel(
            name='UserCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.Course', verbose_name='courses')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': "users' courses",
                'verbose_name_plural': "users' courses",
            },
        ),
        migrations.CreateModel(
            name='CourseComments',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.BaseModel')),
                ('comments', models.CharField(max_length=200, verbose_name='comment')),
                ('parent_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.Course', verbose_name='course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'Course Comment',
                'verbose_name_plural': 'Course Comment',
            },
            bases=('users.basemodel',),
        ),
    ]
